// Generated by view binder compiler. Do not edit!
package com.example.outdoorescape.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.outdoorescape.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSavedTrailBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivMap;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvDistanceUnit;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvTrailDistanceValue;

  private ItemSavedTrailBinding(@NonNull CardView rootView, @NonNull ImageView ivMap,
      @NonNull TextView tvDescription, @NonNull TextView tvDistanceUnit, @NonNull TextView tvTitle,
      @NonNull TextView tvTrailDistanceValue) {
    this.rootView = rootView;
    this.ivMap = ivMap;
    this.tvDescription = tvDescription;
    this.tvDistanceUnit = tvDistanceUnit;
    this.tvTitle = tvTitle;
    this.tvTrailDistanceValue = tvTrailDistanceValue;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSavedTrailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSavedTrailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_saved_trail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSavedTrailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivMap;
      ImageView ivMap = ViewBindings.findChildViewById(rootView, id);
      if (ivMap == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvDistanceUnit;
      TextView tvDistanceUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceUnit == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvTrailDistanceValue;
      TextView tvTrailDistanceValue = ViewBindings.findChildViewById(rootView, id);
      if (tvTrailDistanceValue == null) {
        break missingId;
      }

      return new ItemSavedTrailBinding((CardView) rootView, ivMap, tvDescription, tvDistanceUnit,
          tvTitle, tvTrailDistanceValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
