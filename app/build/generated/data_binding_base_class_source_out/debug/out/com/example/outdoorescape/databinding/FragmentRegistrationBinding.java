// Generated by view binder compiler. Do not edit!
package com.example.outdoorescape.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.outdoorescape.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRegistrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View SplitLineHor1;

  @NonNull
  public final View SplitLineHor2;

  @NonNull
  public final View SplitLineVer1;

  @NonNull
  public final View SplitLineVer2;

  @NonNull
  public final Button btnRegistrationStart;

  @NonNull
  public final ConstraintLayout clAvgPace;

  @NonNull
  public final ConstraintLayout clCalories;

  @NonNull
  public final ConstraintLayout clDistance;

  @NonNull
  public final ConstraintLayout clDuration;

  @NonNull
  public final ConstraintLayout clStats;

  @NonNull
  public final ConstraintLayout clSteps;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Guideline guideline4;

  @NonNull
  public final Guideline guideline5;

  @NonNull
  public final CoordinatorLayout myCoordinatorLayout;

  @NonNull
  public final TextView tvAvgPace;

  @NonNull
  public final TextView tvAvgPageUnit;

  @NonNull
  public final TextView tvAvgPageValue;

  @NonNull
  public final TextView tvCalories;

  @NonNull
  public final TextView tvCaloriesUnit;

  @NonNull
  public final TextView tvCaloriesValue;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvDistanceUnit;

  @NonNull
  public final TextView tvDistanceValue;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvDurationValue;

  @NonNull
  public final TextView tvSteps;

  @NonNull
  public final TextView tvStepsValue;

  private FragmentRegistrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull View SplitLineHor1, @NonNull View SplitLineHor2, @NonNull View SplitLineVer1,
      @NonNull View SplitLineVer2, @NonNull Button btnRegistrationStart,
      @NonNull ConstraintLayout clAvgPace, @NonNull ConstraintLayout clCalories,
      @NonNull ConstraintLayout clDistance, @NonNull ConstraintLayout clDuration,
      @NonNull ConstraintLayout clStats, @NonNull ConstraintLayout clSteps,
      @NonNull Guideline guideline1, @NonNull Guideline guideline2, @NonNull Guideline guideline3,
      @NonNull Guideline guideline4, @NonNull Guideline guideline5,
      @NonNull CoordinatorLayout myCoordinatorLayout, @NonNull TextView tvAvgPace,
      @NonNull TextView tvAvgPageUnit, @NonNull TextView tvAvgPageValue,
      @NonNull TextView tvCalories, @NonNull TextView tvCaloriesUnit,
      @NonNull TextView tvCaloriesValue, @NonNull TextView tvDistance,
      @NonNull TextView tvDistanceUnit, @NonNull TextView tvDistanceValue,
      @NonNull TextView tvDuration, @NonNull TextView tvDurationValue, @NonNull TextView tvSteps,
      @NonNull TextView tvStepsValue) {
    this.rootView = rootView;
    this.SplitLineHor1 = SplitLineHor1;
    this.SplitLineHor2 = SplitLineHor2;
    this.SplitLineVer1 = SplitLineVer1;
    this.SplitLineVer2 = SplitLineVer2;
    this.btnRegistrationStart = btnRegistrationStart;
    this.clAvgPace = clAvgPace;
    this.clCalories = clCalories;
    this.clDistance = clDistance;
    this.clDuration = clDuration;
    this.clStats = clStats;
    this.clSteps = clSteps;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.guideline3 = guideline3;
    this.guideline4 = guideline4;
    this.guideline5 = guideline5;
    this.myCoordinatorLayout = myCoordinatorLayout;
    this.tvAvgPace = tvAvgPace;
    this.tvAvgPageUnit = tvAvgPageUnit;
    this.tvAvgPageValue = tvAvgPageValue;
    this.tvCalories = tvCalories;
    this.tvCaloriesUnit = tvCaloriesUnit;
    this.tvCaloriesValue = tvCaloriesValue;
    this.tvDistance = tvDistance;
    this.tvDistanceUnit = tvDistanceUnit;
    this.tvDistanceValue = tvDistanceValue;
    this.tvDuration = tvDuration;
    this.tvDurationValue = tvDurationValue;
    this.tvSteps = tvSteps;
    this.tvStepsValue = tvStepsValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SplitLine_hor1;
      View SplitLineHor1 = ViewBindings.findChildViewById(rootView, id);
      if (SplitLineHor1 == null) {
        break missingId;
      }

      id = R.id.SplitLine_hor2;
      View SplitLineHor2 = ViewBindings.findChildViewById(rootView, id);
      if (SplitLineHor2 == null) {
        break missingId;
      }

      id = R.id.SplitLine_ver1;
      View SplitLineVer1 = ViewBindings.findChildViewById(rootView, id);
      if (SplitLineVer1 == null) {
        break missingId;
      }

      id = R.id.SplitLine_ver2;
      View SplitLineVer2 = ViewBindings.findChildViewById(rootView, id);
      if (SplitLineVer2 == null) {
        break missingId;
      }

      id = R.id.btnRegistrationStart;
      Button btnRegistrationStart = ViewBindings.findChildViewById(rootView, id);
      if (btnRegistrationStart == null) {
        break missingId;
      }

      id = R.id.clAvgPace;
      ConstraintLayout clAvgPace = ViewBindings.findChildViewById(rootView, id);
      if (clAvgPace == null) {
        break missingId;
      }

      id = R.id.clCalories;
      ConstraintLayout clCalories = ViewBindings.findChildViewById(rootView, id);
      if (clCalories == null) {
        break missingId;
      }

      id = R.id.clDistance;
      ConstraintLayout clDistance = ViewBindings.findChildViewById(rootView, id);
      if (clDistance == null) {
        break missingId;
      }

      id = R.id.clDuration;
      ConstraintLayout clDuration = ViewBindings.findChildViewById(rootView, id);
      if (clDuration == null) {
        break missingId;
      }

      id = R.id.clStats;
      ConstraintLayout clStats = ViewBindings.findChildViewById(rootView, id);
      if (clStats == null) {
        break missingId;
      }

      id = R.id.clSteps;
      ConstraintLayout clSteps = ViewBindings.findChildViewById(rootView, id);
      if (clSteps == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = ViewBindings.findChildViewById(rootView, id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.guideline4;
      Guideline guideline4 = ViewBindings.findChildViewById(rootView, id);
      if (guideline4 == null) {
        break missingId;
      }

      id = R.id.guideline5;
      Guideline guideline5 = ViewBindings.findChildViewById(rootView, id);
      if (guideline5 == null) {
        break missingId;
      }

      id = R.id.myCoordinatorLayout;
      CoordinatorLayout myCoordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (myCoordinatorLayout == null) {
        break missingId;
      }

      id = R.id.tvAvgPace;
      TextView tvAvgPace = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgPace == null) {
        break missingId;
      }

      id = R.id.tvAvgPageUnit;
      TextView tvAvgPageUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgPageUnit == null) {
        break missingId;
      }

      id = R.id.tvAvgPageValue;
      TextView tvAvgPageValue = ViewBindings.findChildViewById(rootView, id);
      if (tvAvgPageValue == null) {
        break missingId;
      }

      id = R.id.tvCalories;
      TextView tvCalories = ViewBindings.findChildViewById(rootView, id);
      if (tvCalories == null) {
        break missingId;
      }

      id = R.id.tvCaloriesUnit;
      TextView tvCaloriesUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvCaloriesUnit == null) {
        break missingId;
      }

      id = R.id.tvCaloriesValue;
      TextView tvCaloriesValue = ViewBindings.findChildViewById(rootView, id);
      if (tvCaloriesValue == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvDistanceUnit;
      TextView tvDistanceUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceUnit == null) {
        break missingId;
      }

      id = R.id.tvDistanceValue;
      TextView tvDistanceValue = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceValue == null) {
        break missingId;
      }

      id = R.id.tvDuration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      id = R.id.tvDurationValue;
      TextView tvDurationValue = ViewBindings.findChildViewById(rootView, id);
      if (tvDurationValue == null) {
        break missingId;
      }

      id = R.id.tvSteps;
      TextView tvSteps = ViewBindings.findChildViewById(rootView, id);
      if (tvSteps == null) {
        break missingId;
      }

      id = R.id.tvStepsValue;
      TextView tvStepsValue = ViewBindings.findChildViewById(rootView, id);
      if (tvStepsValue == null) {
        break missingId;
      }

      return new FragmentRegistrationBinding((ConstraintLayout) rootView, SplitLineHor1,
          SplitLineHor2, SplitLineVer1, SplitLineVer2, btnRegistrationStart, clAvgPace, clCalories,
          clDistance, clDuration, clStats, clSteps, guideline1, guideline2, guideline3, guideline4,
          guideline5, myCoordinatorLayout, tvAvgPace, tvAvgPageUnit, tvAvgPageValue, tvCalories,
          tvCaloriesUnit, tvCaloriesValue, tvDistance, tvDistanceUnit, tvDistanceValue, tvDuration,
          tvDurationValue, tvSteps, tvStepsValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
